#!/bin/bash

#1.输出普通字符串，默认不换行，需要加换行符号\n
# printf "Hello, Shell\n"

#2.格式化字符串输出
printf "%-5s %-10s %-4s\n" 编号  姓名 分数 
printf "%-5s %-10s %-4.2f\n" 01 Tom 90.3456 
printf "%-5s %-10s %-4.2f\n" 02 Jack 89.2345 
printf "%-5s %-10s %-4.2f\n" 03 Jeff 98.4323

#3.格式替代符,由百分比符号（%）和指示符组成。

# %c 显示相对应参数的第一个字符,如果c前面加数字，正数表示向右对齐对应数字长度，
#负数表示向左对齐对应长度
printf "%10c \n"  "123124" 

# %d,%i 16进制转十进制0x表示十六进制
printf "%i \n"  "0xab" 

# %x 十进制转16进制
printf "%x \n" "171"

# %X 不带正负号的十六进制,使用A至F表示10至15
# printf 请输入待转换的数：
# read name
# printf "%X \n" $name

# %E %e 以指数形式输出实数
#([-d].precisionE [+-dd]) d表示实数第一位，e后面指的指数的位数
printf " %E \n" "12.121"
#： 1.212100e+01 表示1.212100乘以10的一次方


# %f 不指定宽度，整数部分全部输出并默认输出6位小数。
# %m.nf：输出共占m列，其中有n位小数，如数值宽度小于m左端补空格。
# %-m.nf：输出共占n列，其中有n位小数，如数值宽度小于m右端补空格。
printf "%3.3f \n" "1.12345678"

# %g 自动选f格式或e格式中较短的一种输出，且不输出无意义的零。
printf "%g \n" "1.1"


#=============扩展==========
#echo "obase=;0111"|bc
#linux表示不同进制需要带有前缀，表示法BASE#NUMBER，base具体指进制类型,number是具体的数
#但是赋值时候用(())符号，直接用等号会默认输出为字符串，不会识别ttt变量，或者用let命令把变量申明存放在自定义的变量里面

((t=16#ab))
let bb=16#ab
printf "$t \n"


##ibase 输入的进制，obase输出进制 
echo "obase=10; ibase=16; AB" | bc






